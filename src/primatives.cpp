#include "primatives.h"
#include "spdlog/spdlog.h"
#include <vector>

const std::vector<float> box_vertex_data = {
    // Format: x, y, z, nx, ny, nz

    // +X face (right)
    0.5,
    -0.5,
    -0.5,
    1,
    0,
    0,
    0.5,
    0.5,
    -0.5,
    1,
    0,
    0,
    0.5,
    0.5,
    0.5,
    1,
    0,
    0,
    0.5,
    -0.5,
    0.5,
    1,
    0,
    0,

    // -X face (left)
    -0.5,
    -0.5,
    0.5,
    -1,
    0,
    0,
    -0.5,
    0.5,
    0.5,
    -1,
    0,
    0,
    -0.5,
    0.5,
    -0.5,
    -1,
    0,
    0,
    -0.5,
    -0.5,
    -0.5,
    -1,
    0,
    0,

    // +Y face (top)
    -0.5,
    0.5,
    -0.5,
    0,
    1,
    0,
    -0.5,
    0.5,
    0.5,
    0,
    1,
    0,
    0.5,
    0.5,
    0.5,
    0,
    1,
    0,
    0.5,
    0.5,
    -0.5,
    0,
    1,
    0,

    //-Y face (bottom)
    -0.5,
    -0.5,
    0.5,
    0,
    -1,
    0,
    -0.5,
    -0.5,
    -0.5,
    0,
    -1,
    0,
    0.5,
    -0.5,
    -0.5,
    0,
    -1,
    0,
    0.5,
    -0.5,
    0.5,
    0,
    -1,
    0,

    // +Z face (front)
    -0.5,
    -0.5,
    0.5,
    0,
    0,
    1,
    0.5,
    -0.5,
    0.5,
    0,
    0,
    1,
    0.5,
    0.5,
    0.5,
    0,
    0,
    1,
    -0.5,
    0.5,
    0.5,
    0,
    0,
    1,

    // -Z face (back)
    0.5,
    -0.5,
    -0.5,
    0,
    0,
    -1,
    -0.5,
    -0.5,
    -0.5,
    0,
    0,
    -1,
    -0.5,
    0.5,
    -0.5,
    0,
    0,
    -1,
    0.5,
    0.5,
    -0.5,
    0,
    0,
    -1};

const std::vector<unsigned int> box_index_data = {
    // +X face
    0,
    1,
    2,
    0,
    2,
    3,

    // -X face
    4,
    5,
    6,
    4,
    6,
    7,

    // +Y face
    8,
    9,
    10,
    8,
    10,
    11,

    // -Y face
    12,
    13,
    14,
    12,
    14,
    15,

    // +Z face
    16,
    17,
    18,
    16,
    18,
    19,

    // -Z face
    20,
    21,
    22,
    20,
    22,
    23};

Box::Box() : Mesh(box_vertex_data, box_index_data) {
	spdlog::debug("Box created, with {0} vertecies, and {1} indecies!",
	    box_vertex_data.size() / 3,
	    box_index_data.size() / 3);
}

const std::string Box::class_name() const {
	return std::string("Box");
}
